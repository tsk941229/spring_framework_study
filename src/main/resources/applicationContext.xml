<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!-- DataSource 설정 -->
    <context:property-placeholder location="classpath:config/database.properties" />
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- Spring JDBC 설정 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- Transaction 설정 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* com.springbook..*(..))"/>
        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
    </aop:config>
    
    <context:component-scan base-package="polymorphism"></context:component-scan>

    <context:component-scan base-package="com.springbook.*"></context:component-scan>

    <aop:aspectj-autoproxy />

    <bean id="UserServiceImpl" class="com.springbook.user.impl.UserServiceImpl">
        <property name="userDAO" ref="userDAO"/>
    </bean>

    <bean id="userDAO" class="com.springbook.user.impl.UserDAO"></bean>

<!--    <bean id="log" class="com.springbook.common.LogAdvice"></bean>-->
<!--    <bean id="before" class="com.springbook.common.BeforeAdvice"></bean>-->
<!--    <bean id="afterReturning" class="com.springbook.common.AfterReturningAdvice"></bean>-->
<!--    <bean id="afterThrowing" class="com.springbook.common.AfterThrowingAdvice"></bean>-->
<!--    <bean id="after" class="com.springbook.common.AfterAdvice"></bean>-->
<!--    <bean id="around" class="com.springbook.common.AroundAdvice"></bean>-->

<!--    <aop:config>-->
<!--        <aop:pointcut id="allPointcut" expression="execution(* com.springbook..*Impl.*(..))"/>-->
<!--        <aop:pointcut id="getPointcut" expression="execution(* com.springbook..*Impl.get*(..))"/>-->

<!--&lt;!&ndash;        <aop:aspect ref="log">&ndash;&gt;-->
<!--&lt;!&ndash;            <aop:before pointcut-ref="getPointcut" method="printLog"/>&ndash;&gt;-->
<!--&lt;!&ndash;        </aop:aspect>&ndash;&gt;-->

<!--        <aop:aspect ref="around">-->
<!--            <aop:around pointcut-ref="allPointcut" method="aroundLog"/>-->
<!--        </aop:aspect>-->

<!--        <aop:aspect ref="before">-->
<!--            <aop:before pointcut-ref="allPointcut" method="beforeLog"/>-->
<!--        </aop:aspect>-->

<!--        <aop:aspect ref="afterReturning">-->
<!--            <aop:after-returning pointcut-ref="getPointcut" method="afterLog" returning="returnObj"/>-->
<!--        </aop:aspect>-->

<!--        <aop:aspect ref="afterThrowing">-->
<!--            <aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptObj"/>-->
<!--        </aop:aspect>-->

<!--        <aop:aspect ref="after">-->
<!--            <aop:after-throwing pointcut-ref="allPointcut" method="finallyLog"/>-->
<!--        </aop:aspect>-->

<!--    </aop:config>-->


    <!--<bean id="tv" class="polymorphism.SamsungTV" init-method="initMethod" destroy-method="destroyMethod" lazy-init="true" >
        <constructor-arg ref="apple"></constructor-arg>
        <constructor-arg name="price" value="270000"></constructor-arg>
    </bean>

    <bean id="sony" class="polymorphism.SonySpeaker" lazy-init="true" ></bean>
    <bean id="apple" class="polymorphism.AppleSpeaker" lazy-init="true" ></bean>-->


</beans>